tailwind.config={theme:{extend:{}},plugins:[function({addUtilities:e}){e({".trending-search-btn":{"@apply inline-block bg-slate-700/50 text-slate-300 px-3 py-1 rounded-full hover:bg-slate-600/70 hover:text-white transition-colors mx-1":{}},".feature-card":{"@apply p-8 bg-slate-800/50 border border-slate-700 rounded-2xl transition-all duration-300 hover:border-blue-500/50 hover:shadow-2xl hover:shadow-blue-500/10":{}},".feature-icon":{"@apply inline-flex items-center justify-center h-12 w-12 rounded-lg bg-blue-500 text-white":{}},".how-to-use-card":{"@apply relative z-10":{}},".how-to-use-visual":{"@apply flex items-center justify-center h-24 w-24 mx-auto bg-slate-800/50 border-2 border-blue-500 rounded-full shadow-lg shadow-blue-500/20":{}},".testimonial-card":{"@apply p-8 bg-slate-800/50 border border-slate-700 rounded-2xl":{}},".gemini-btn":{"@apply bg-blue-600 text-white px-4 py-2 rounded-full hover:bg-blue-700 active:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition-colors text-sm font-semibold whitespace-nowrap":{}},".language-option":{"@apply block px-4 py-2 text-sm text-slate-200 hover:bg-slate-600":{}}},["responsive","hover","active","focus"])}]};const searchInput=document.getElementById("searchInput"),suggestionsContainer=document.getElementById("suggestions"),searchSpinner=document.getElementById("searchSpinner"),lyricsModal=document.getElementById("lyricsModal"),lyricsContent=document.getElementById("lyricsContent"),closeModalButton=document.getElementById("closeModalButton"),backToTopBtn=document.getElementById("backToTopBtn"),geminiControlsWrapper=document.getElementById("gemini-controls-wrapper"),geminiOutput=document.getElementById("gemini-output"),summarizeBtn=document.getElementById("summarizeBtn"),artistBioBtn=document.getElementById("artistBioBtn"),songFactsBtn=document.getElementById("songFactsBtn"),analyzeMoodBtn=document.getElementById("analyzeMoodBtn"),generateChordsBtn=document.getElementById("generateChordsBtn"),similarSongsBtn=document.getElementById("similarSongsBtn"),translateBtn=document.getElementById("translateBtn"),languageDropdown=document.getElementById("language-dropdown"),API_URL="https://api.lyrics.ovh";let debounceTimer,originalLyrics="",currentArtist="",currentTitle="";const debounce=(e,t)=>{clearTimeout(debounceTimer),debounceTimer=setTimeout(e,t)},performSearch=e=>{searchInput.value=e,e.trim()?(searchSpinner.classList.remove("hidden"),debounce((()=>searchSongs(e.trim())),300)):(searchSpinner.classList.add("hidden"),suggestionsContainer.innerHTML="")};async function searchSongs(e){try{const t=await fetch(`${API_URL}/suggest/${e}`);if(!t.ok)throw new Error("Suggestions not found.");displaySuggestions((await t.json()).data)}catch(e){console.error("Suggestion Error:",e),displayError(suggestionsContainer,"Could not fetch suggestions.")}finally{searchSpinner.classList.add("hidden")}}function displaySuggestions(e){0!==e.length?suggestionsContainer.innerHTML=e.slice(0,5).map((e=>`\n                  <div class="flex items-center p-3 bg-slate-800/50 border border-slate-700/80 rounded-xl hover:bg-slate-700/70 cursor-pointer transition-all duration-200" \n                       onclick="getLyrics('${e.artist.name.replace(/'/g,"\\'")}', '${e.title.replace(/'/g,"\\'")}', '${e.album.cover_big}')">\n                      <img src="${e.album.cover_medium}" alt="Album Art" class="w-16 h-16 rounded-lg object-cover flex-shrink-0" onerror="this.onerror=null;this.src='https://placehold.co/64x64/1f2937/ffffff?text=??';">\n                      <div class="ml-4 overflow-hidden"><p class="font-bold text-lg text-slate-100 truncate">${e.title}</p><p class="text-sm text-slate-400 truncate">${e.artist.name}</p></div>\n                  </div>`)).join(""):displayError(suggestionsContainer,"No songs found for your search.")}async function getLyrics(e,t,n){lyricsModal.classList.add("flex"),lyricsModal.classList.remove("hidden"),document.body.classList.add("body-no-scroll"),currentArtist=e,currentTitle=t,geminiOutput.classList.add("hidden"),geminiOutput.innerHTML="",lyricsContent.innerHTML=`<div class="flex flex-col items-center justify-center h-full text-center text-slate-500"><div class="w-12 h-12 border-4 border-dashed rounded-full animate-spin border-blue-500"></div><p class="mt-4 text-lg">Fetching lyrics for "${t}"...</p></div>`,geminiControlsWrapper.classList.add("hidden");try{const r=await fetch(`${API_URL}/v1/${e}/${t}`);if(!r.ok)throw new Error("Lyrics not available for this song.");const i=await r.json();originalLyrics=i.lyrics,displayLyrics(i.lyrics,t,e,n),geminiControlsWrapper.classList.remove("hidden")}catch(n){console.error("Lyrics Error:",n);displayError(lyricsContent,`Sorry, lyrics for "${t}" by ${e} are not available at the moment.`,!0)}}function displayLyrics(e,t,n,r){const i=e.replace(/(\r\n|\n|\r)/g,"<br>");lyricsContent.innerHTML=`\n                  <div class="flex flex-col sm:flex-row items-center mb-8">\n                      <img src="${r}" alt="Album Art" class="w-28 h-28 rounded-lg object-cover shadow-2xl shadow-blue-500/10 flex-shrink-0" onerror="this.onerror=null;this.src='https://placehold.co/112x112/1e293b/ffffff?text=${t[0]}';">\n                      <div class="sm:ml-6 mt-4 sm:mt-0 text-center sm:text-left"><h2 class="text-3xl font-bold text-white">${t}</h2><p class="text-xl text-slate-300">${n}</p></div>\n                  </div>\n                  <div class="lyrics-text text-slate-300 text-lg leading-relaxed whitespace-pre-wrap">${i}</div>`,lyricsContent.scrollTop=0}function displayError(e,t,n=!1){e.innerHTML=n?`<div class="flex flex-col items-center justify-center h-full text-center text-red-400"><svg class="w-16 h-16" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126z" /></svg><p class="mt-4 text-lg">${t}</p></div>`:`<div class="p-4 text-center text-slate-400">${t}</div>`}async function callGemini(e){const t={contents:[{parts:[{text:e}]}]};try{const e=await fetch("https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=AIzaSyCN-Pj28hWSCTBw9w0UiWMysWxT6T4wJ4M",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!e.ok)throw new Error(`API Error: ${e.statusText}`);const n=await e.json();if(n.candidates&&n.candidates.length>0&&n.candidates[0].content&&n.candidates[0].content.parts)return n.candidates[0].content.parts[0].text;throw console.error("Unexpected API response structure:",n),new Error("No content received from Gemini or unexpected format.")}catch(e){return console.error("Gemini API call failed:",e),`Error: Could not process the request. ${e.message}`}}searchInput.addEventListener("input",(()=>{const e=searchInput.value;e?(searchSpinner.classList.remove("hidden"),debounce((()=>searchSongs(e.trim())),300)):(searchSpinner.classList.add("hidden"),suggestionsContainer.innerHTML="")})),document.querySelectorAll(".trending-search-btn").forEach((e=>{e.addEventListener("click",(()=>{var t;t=e.textContent,searchInput.value=t,t.trim()?(searchSpinner.classList.remove("hidden"),debounce((()=>searchSongs(t.trim())),300)):(searchSpinner.classList.add("hidden"),suggestionsContainer.innerHTML="")}))})),closeModalButton.addEventListener("click",(()=>{lyricsModal.classList.add("hidden"),document.body.classList.remove("body-no-scroll")})),summarizeBtn.addEventListener("click",(async()=>{geminiOutput.classList.remove("hidden"),geminiOutput.innerHTML='<div class="flex items-center justify-center gap-2"><div class="w-5 h-5 border-2 border-dashed rounded-full animate-spin border-white"></div><p>‚ú® Summarizing...</p></div>';const e=`Summarize the meaning of these song lyrics in a few sentences. What is the story or main emotion being conveyed? \n\nLyrics:\n${originalLyrics}`,t=await callGemini(e);geminiOutput.innerHTML=`<strong>Summary:</strong><br>${t.replace(/\n/g,"<br>")}`})),artistBioBtn.addEventListener("click",(async()=>{geminiOutput.classList.remove("hidden"),geminiOutput.innerHTML='<div class="flex items-center justify-center gap-2"><div class="w-5 h-5 border-2 border-dashed rounded-full animate-spin border-white"></div><p>‚ú® Getting artist bio...</p></div>';const e=`Provide a short biography (around 50-70 words) for the artist: ${currentArtist}.`,t=await callGemini(e);geminiOutput.innerHTML=`<strong>About ${currentArtist}:</strong><br>${t.replace(/\n/g,"<br>")}`})),songFactsBtn.addEventListener("click",(async()=>{geminiOutput.classList.remove("hidden"),geminiOutput.innerHTML='<div class="flex items-center justify-center gap-2"><div class="w-5 h-5 border-2 border-dashed rounded-full animate-spin border-white"></div><p>‚ú® Finding song facts...</p></div>';const e=`Provide 2-3 interesting and brief facts or trivia about the song "${currentTitle}" by ${currentArtist}. Format them as a simple list.`,t=await callGemini(e);geminiOutput.innerHTML=`<strong>Song Facts:</strong><br>${t.replace(/\n/g,"<br>")}`})),analyzeMoodBtn.addEventListener("click",(async()=>{geminiOutput.classList.remove("hidden"),geminiOutput.innerHTML='<div class="flex items-center justify-center gap-2"><div class="w-5 h-5 border-2 border-dashed rounded-full animate-spin border-white"></div><p>‚ú® Analyzing mood...</p></div>';const e=`Analyze the mood of the following lyrics. Respond with just one word for the mood and a single, relevant emoji, separated by a comma. For example: "Happy,üòä" or "Sad,üò¢". \n\nLyrics:\n${originalLyrics}`,t=await callGemini(e),[n,r]=t.split(",");geminiOutput.innerHTML=`<div class="text-center"><p class="text-5xl">${r||"‚ùì"}</p><p class="mt-2 font-semibold">${n||"Could not determine mood"}</p></div>`})),generateChordsBtn.addEventListener("click",(async()=>{geminiOutput.classList.add("hidden");const e=document.querySelector(".lyrics-text");e.innerHTML='<div class="flex items-center justify-center gap-2"><div class="w-5 h-5 border-2 border-dashed rounded-full animate-spin border-white"></div><p>üé∏ Generating Chords...</p></div>';const t=`Add simplified, beginner-friendly guitar chords to the following lyrics. Place the chord name in brackets like [C] or [G] right before the word where the chord change should happen. \n\nLyrics:\n${originalLyrics}`;let n=await callGemini(t);n=n.replace(/\[(.*?)\]/g,'<strong class="text-sky-400">[$1]</strong>'),e.innerHTML=n.replace(/(\r\n|\n|\r)/g,"<br>")})),similarSongsBtn.addEventListener("click",(async()=>{geminiOutput.classList.remove("hidden"),geminiOutput.innerHTML='<div class="flex items-center justify-center gap-2"><div class="w-5 h-5 border-2 border-dashed rounded-full animate-spin border-white"></div><p>üéß Finding similar songs...</p></div>';const e=`Based on the song "${currentTitle}" by ${currentArtist}, suggest 3 other songs that are similar in mood, style, or lyrical theme. Please list them clearly as "Song Title - Artist Name".`,t=await callGemini(e);geminiOutput.innerHTML=`<strong>Similar Songs:</strong><br>${t.replace(/\n/g,"<br>")}`})),translateBtn.addEventListener("click",(e=>{e.stopPropagation(),languageDropdown.classList.toggle("hidden")})),document.addEventListener("click",(e=>{translateBtn.contains(e.target)||languageDropdown.contains(e.target)||languageDropdown.classList.add("hidden")})),document.querySelectorAll(".language-option").forEach((e=>{e.addEventListener("click",(async e=>{e.preventDefault();const t=e.target.dataset.lang;if(languageDropdown.classList.add("hidden"),"Original"===t)return void(document.querySelector(".lyrics-text").innerHTML=originalLyrics.replace(/(\r\n|\n|\r)/g,"<br>"));const n=document.querySelector(".lyrics-text");n.innerHTML='<div class="flex items-center justify-center gap-2"><div class="w-5 h-5 border-2 border-dashed rounded-full animate-spin border-white"></div><p>üàØ Translating...</p></div>';const r=`Translate the following song lyrics to ${t}. Keep the original line breaks and song structure.\n\nLyrics:\n${originalLyrics}`,i=await callGemini(r);n.innerHTML=i.replace(/(\r\n|\n|\r)/g,"<br>")}))})),document.addEventListener("DOMContentLoaded",(()=>{document.getElementById("copyright-year").textContent=(new Date).getFullYear();const e=document.getElementById("mobile-menu-button"),t=document.getElementById("mobile-menu"),n=document.getElementById("menu-open-icon"),r=document.getElementById("menu-close-icon");e.addEventListener("click",(()=>{t.classList.toggle("hidden"),n.classList.toggle("hidden"),r.classList.toggle("hidden")})),t.addEventListener("click",(e=>{"A"===e.target.tagName&&(t.classList.add("hidden"),n.classList.remove("hidden"),r.classList.add("hidden"))}));const i=document.querySelectorAll(".content-section"),s=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting&&e.target.classList.add("visible")}))}),{threshold:.1});i.forEach((e=>{s.observe(e)})),window.addEventListener("scroll",(()=>{window.pageYOffset>300?backToTopBtn.classList.remove("hidden"):backToTopBtn.classList.add("hidden")})),backToTopBtn.addEventListener("click",(()=>{window.scrollTo({top:0,behavior:"smooth"})}))}));
